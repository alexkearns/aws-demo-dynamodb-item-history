AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deploys a solution that enables the querying of DynamoDB item history

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60

Parameters:
  DynamoDbTableName:
    Type: String
    Description: The name of DynamoDB table to create
    Default: dummy-dynamodb-table

Resources:
  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: dummy_glue_database

  GlueCrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: RootInlinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub ${S3Bucket.Arn}/*

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      DatabaseName: !Ref GlueDatabase
      Name: dummy-glue-crawler
      Role: !GetAtt GlueCrawlerRole.Arn
      Targets:
        S3Targets:
          - Path: !Sub ${S3Bucket}/${DynamoDbTable}

  AthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: dummy-workgroup-name
      WorkGroupConfiguration:
        ResultConfiguration:
          EncryptionConfiguration:
            EncryptionOption: SSE_S3
          OutputLocation: !Sub s3://${AthenaQueryResultsS3Bucket}

  AthenaQueryResultsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub athena-query-results-${AWS::AccountId}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub dummy-dynamodb-history-${AWS::AccountId}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  DynamoDbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDbTableName
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  StreamItemProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stream_item_processor/
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
          TABLE_NAME: !Ref DynamoDbTable
      Architectures:
        - x86_64
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:336392948345:layer:AWSDataWrangler-Python39:5
      Events:
        DynamoDbStream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt DynamoDbTable.StreamArn
            StartingPosition: LATEST
            BatchSize: 25
            Enabled: true
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub ${S3Bucket.Arn}/*

Outputs:
  StreamItemProcessorFunction:
    Description: "Stream Item Processor Lambda Function ARN"
    Value: !GetAtt StreamItemProcessorFunction.Arn
  StreamItemProcessorFunctionIamRole:
    Description: "Implicit IAM Role created for Stream Item Processor function"
    Value: !GetAtt StreamItemProcessorFunctionRole.Arn
